//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BillGeneration.sendmail {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SendmailSoap", Namespace="http://sendmail.quacito.com/")]
    public partial class Sendmail : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Sending_EmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendingBulkEmailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sendmail() {
            this.Url = global::BillGeneration.Properties.Settings.Default.BillGeneration_sendmail_Sendmail;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Sending_EmailCompletedEventHandler Sending_EmailCompleted;
        
        /// <remarks/>
        public event SendingBulkEmailCompletedEventHandler SendingBulkEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sendmail.quacito.com/Sending_Email", RequestNamespace="http://sendmail.quacito.com/", ResponseNamespace="http://sendmail.quacito.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Sending_Email(string strEmailAddrFrom, string strEmailAddrTo, string strEmailAddrBcc, string Subject, string Body, string strAttachement) {
            object[] results = this.Invoke("Sending_Email", new object[] {
                        strEmailAddrFrom,
                        strEmailAddrTo,
                        strEmailAddrBcc,
                        Subject,
                        Body,
                        strAttachement});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Sending_EmailAsync(string strEmailAddrFrom, string strEmailAddrTo, string strEmailAddrBcc, string Subject, string Body, string strAttachement) {
            this.Sending_EmailAsync(strEmailAddrFrom, strEmailAddrTo, strEmailAddrBcc, Subject, Body, strAttachement, null);
        }
        
        /// <remarks/>
        public void Sending_EmailAsync(string strEmailAddrFrom, string strEmailAddrTo, string strEmailAddrBcc, string Subject, string Body, string strAttachement, object userState) {
            if ((this.Sending_EmailOperationCompleted == null)) {
                this.Sending_EmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSending_EmailOperationCompleted);
            }
            this.InvokeAsync("Sending_Email", new object[] {
                        strEmailAddrFrom,
                        strEmailAddrTo,
                        strEmailAddrBcc,
                        Subject,
                        Body,
                        strAttachement}, this.Sending_EmailOperationCompleted, userState);
        }
        
        private void OnSending_EmailOperationCompleted(object arg) {
            if ((this.Sending_EmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sending_EmailCompleted(this, new Sending_EmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sendmail.quacito.com/SendingBulkEmail", RequestNamespace="http://sendmail.quacito.com/", ResponseNamespace="http://sendmail.quacito.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendingBulkEmail(string From, string To, string BCC, string Subject, string Message, string AttObj) {
            object[] results = this.Invoke("SendingBulkEmail", new object[] {
                        From,
                        To,
                        BCC,
                        Subject,
                        Message,
                        AttObj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendingBulkEmailAsync(string From, string To, string BCC, string Subject, string Message, string AttObj) {
            this.SendingBulkEmailAsync(From, To, BCC, Subject, Message, AttObj, null);
        }
        
        /// <remarks/>
        public void SendingBulkEmailAsync(string From, string To, string BCC, string Subject, string Message, string AttObj, object userState) {
            if ((this.SendingBulkEmailOperationCompleted == null)) {
                this.SendingBulkEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendingBulkEmailOperationCompleted);
            }
            this.InvokeAsync("SendingBulkEmail", new object[] {
                        From,
                        To,
                        BCC,
                        Subject,
                        Message,
                        AttObj}, this.SendingBulkEmailOperationCompleted, userState);
        }
        
        private void OnSendingBulkEmailOperationCompleted(object arg) {
            if ((this.SendingBulkEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendingBulkEmailCompleted(this, new SendingBulkEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Sending_EmailCompletedEventHandler(object sender, Sending_EmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sending_EmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sending_EmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendingBulkEmailCompletedEventHandler(object sender, SendingBulkEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendingBulkEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendingBulkEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591